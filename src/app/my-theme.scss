@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
$mat-black: (
	50: rgb(255, 255, 255),
	100:rgb(170, 170, 170),
	200:rgb(129, 129, 129),
	300:rgb(120, 120, 129),
	400:rgb(110, 110, 110),
	500:rgb(100, 100, 100),
	600:rgb(90, 90, 90),
	700:rgb(80, 80, 80),
	800:rgb(70, 70, 70),
	900:rgb(60, 60, 60),
	A100:rgb(50, 50, 50),
	A200:rgb(40, 40, 40),
	A400:rgb(20, 20, 20),
	A700:rgb(0, 0, 0),
	contrast:
		(
			50: $dark-primary-text,
			100: $dark-primary-text,
			200: $dark-primary-text,
			300: $dark-primary-text,
			400: $dark-primary-text,
			500: $light-primary-text,
			600: $light-primary-text,
			700: $light-primary-text,
			800: $light-primary-text,
			900: $light-primary-text,
			A100: $dark-primary-text,
			A200: $light-primary-text,
			A400: $light-primary-text,
			A700: $light-primary-text
		)
);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-black);
$candy-app-accent: mat-palette($mat-red, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
